#!/usr/bin/env bash

set -Eeuo pipefail

function rm_if_exists {
  file=$1
  if [ "$(ls "${file}")" ]; then
    echo "Removing ${file}"
    rm -rf "${file}"
  fi
}

function symlink {
  target=$1
  link_name=$2
  ln -s "${HOME}/.dotfiles/${target}" "${link_name}"
  ls -lhart "${link_name}"
}

function gitconf {
  echo "Setting up git..."
  rm_if_exists "${HOME}/.gitconfig"
  rm_if_exists "${HOME}/.gitignore"
  symlink "git/gitignore" "${HOME}/.gitignore"
  symlink "git/gitconfig" "${HOME}/.gitconfig"
}

function download_latest_release {
  release_info=$(curl --silent "https://api.github.com/repos/${1}/releases/latest")
  download_url=$(echo "$release_info" | grep '"browser_download_url":' | grep -Eo "${2}")
  wget "$download_url" -O "${HOME}/$(basename "$download_url")"
}

function alacritty {
  alacritty_path="${HOME}/.config/alacritty"
  echo "Setting up alacritty..."
  rm_if_exists "${alacritty_path}/alacritty.yml"
  symlink "alacritty/alacritty.yml" "${alacritty_path}"
}

function kitty() {
  kitty_path="${HOME}/.config/kitty"
  echo "Setting up kitty..."
  rm_if_exists "${kitty_path}/kitty.conf"
  rm_if_exists "${kitty_path}/launch.conf"
  symlink "kitty/kitty.conf" "${kitty_path}/kitty.conf"
  symlink "kitty/launch.conf" "${kitty_path}/launch.conf"
}

function tmux {
  echo "Setting up tmux..."
  rm_if_exists "${HOME}/.tmux.conf"
  symlink "tmux/tmux.conf" "${HOME}/.tmux.conf"
}

function neovim {
  echo "Setting up neovim..."
  rm -rfv "${HOME}/.config/nvim"
  rm -rfv "${HOME}/.local/share/nvim"
  rm -rfv "${HOME}/.cache/nvim"
  symlink "nvchad/nvim" "${HOME}/.config"
}

function zsh {
  echo "Setting up oh-my-zsh..."
  rm_if_exists "${HOME}/.zshrc"
  symlink "zsh/zshrc" "${HOME}/.zshrc"
}

function mycli {
  echo "Setting up mycli..."
  rm_if_exists "${HOME}/.myclirc"
  symlink "mycli/myclirc" "${HOME}/.myclirc"
}

function pgcli {
  echo "Setting up pgcli..."
  rm_if_exists "${HOME}/.config/pgcli/config"
  symlink "pgcli/config" "${HOME}/.config/pgcli/config"
}

function zsh_vi_mode {
  echo "Setting up zsh-vi-mode..."
  custom_zsh=${ZSH_CUSTOM:-$HOME/.dotfiles/zsh}
  rm_if_exists "${custom_zsh}/plugins/zsh-vi-mode"
  git clone https://github.com/jeffreytse/zsh-vi-mode.git \
    "${custom_zsh}/plugins/zsh-vi-mode"
}

function zsh_autosuggestions {
  echo "Setting up zsh-autosuggestions..."
  custom_zsh=${ZSH_CUSTOM:-$HOME/.dotfiles/zsh}
  rm_if_exists "${custom_zsh}/plugins/zsh-autosuggestions"
  git clone https://github.com/zsh-users/zsh-autosuggestions.git \
    "${custom_zsh}/plugins/zsh-autosuggestions"
}

function powerlevel10k {
  echo "Setting up powerlevel10k..."
  custom_zsh=${ZSH_CUSTOM:-$HOME/.dotfiles/zsh}
  rm_if_exists "${custom_zsh}/themes/powerlevel10k"
  rm_if_exists "${HOME}/.p10k.zsh"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \
    "${custom_zsh}/themes/powerlevel10k"
  symlink "zsh/p10k.zsh" "${HOME}/.p10k.zsh"
}

function fzf {
  echo "Setting up fzf..."
  rm_if_exists "${HOME}/.fzf"
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  "${HOME}/.fzf/install"
}

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-d] [-f] -p param_value arg1 [arg2...]
Script description here.
Available options:
-h, --help      Print this help and exit
-d, --debug     Print script debug info
-f, --flag      Some flag description
-p, --param     Some param description
EOF
exit
}

function main {
  echo "Setting up dotfiles..."
  gitconf
  # alacritty
  kitty
  tmux
  neovim
  zsh
  mycli
  pgcli
  zsh_vi_mode
  zsh_autosuggestions
  powerlevel10k
  fzf
}

if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
  usage
fi

main "$@"
